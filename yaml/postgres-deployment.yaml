apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-resolved.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
        app: postgres
    spec:
#      hostNetwork: true
#      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - env:
            - name: POSTGRES_DB
              value: greenlight
            - name: POSTGRES_PASSWORD
              value: JHs9Tt9uP7DxtSuEucZWZccILs0RDMahv92cZX2R
            - name: POSTGRES_USER
              value: postgres
          image: postgres:12-alpine
          ports:
          - containerPort: 5432
#          livenessProbe:
#            exec:
#              command:
#                - pg_isready -U postgres
#            failureThreshold: 5
#            periodSeconds: 10
#            timeoutSeconds: 5
          name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-claim0
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
status: {}
